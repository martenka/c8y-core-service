openapi: 3.0.0
paths:
  /v1:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /v1/sensors:
    post:
      operationId: Create a new sensor
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateSensorDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSensorDto'
      tags:
        - sensors
    patch:
      operationId: Update sensors
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSensorDto'
      tags:
        - sensors
  /v1/sensors/search:
    get:
      operationId: Search sensors
      summary: ''
      parameters:
        - name: id
          required: false
          in: query
          schema:
            type: string
        - name: managedObjectId
          required: false
          in: query
          schema:
            type: string
        - name: managedObjectName
          required: false
          in: query
          schema:
            type: string
        - name: valueFragmentType
          required: false
          in: query
          schema:
            type: string
        - name: valueFragmentDisplayName
          required: false
          in: query
          schema:
            type: string
        - name: pageSize
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: currentPage
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: withTotalElements
          required: false
          in: query
          schema:
            type: boolean
        - name: withTotalPages
          required: false
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutputSensorDto'
      tags:
        - sensors
  /v1/sensors/{id}:
    get:
      operationId: Get one sensor
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSensorDto'
      tags:
        - sensors
    delete:
      operationId: Delete sensor
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputSensorDto'
      tags:
        - sensors
  /v1/groups:
    post:
      operationId: Create a new group
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateGroupDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputGroupDto'
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
      tags:
        - groups
    get:
      operationId: Get all groups
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputGroupDto'
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
      tags:
        - groups
    patch:
      operationId: Update groups
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutputGroupDto'
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
      tags:
        - groups
  /v1/groups/{id}:
    get:
      operationId: Get one group
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
      tags:
        - groups
    delete:
      operationId: Delete group
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputGroupDto'
      tags:
        - groups
  /v1/auth/login:
    post:
      operationId: Login
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: Access token was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDto'
      tags:
        - auth
  /v1/auth/register:
    post:
      operationId: Register a new user
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutputDto'
      tags:
        - auth
  /v1/users/{id}:
    get:
      operationId: Get one user
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutputDto'
      tags:
        - users
    patch:
      operationId: Update user
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutputDto'
      tags:
        - users
  /v1/users/delete:
    post:
      operationId: Remove users
      summary: ''
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserInputDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - users
  /v1/files/search:
    get:
      operationId: Search files
      summary: ''
      parameters:
        - name: fromDate
          required: false
          in: query
          schema:
            type: string
        - name: toDate
          required: false
          in: query
          schema:
            type: string
        - name: pageSize
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: currentPage
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: withTotalElements
          required: false
          in: query
          schema:
            type: boolean
        - name: withTotalPages
          required: false
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutputFileDto'
      tags:
        - files
  /v1/files/{id}:
    get:
      operationId: Get one file
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputFileDto'
      tags:
        - files
  /v1/tasks:
    post:
      operationId: Create a new task
      summary: ''
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaskDto'
      tags:
        - tasks
  /v1/tasks/search:
    get:
      operationId: Search tasks
      summary: ''
      parameters:
        - name: pageSize
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: currentPage
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: withTotalElements
          required: false
          in: query
          schema:
            type: boolean
        - name: withTotalPages
          required: false
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutputTaskDto'
      tags:
        - tasks
  /v1/tasks/{id}:
    get:
      operationId: Get one task
      summary: ''
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
        2XX:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputTaskDto'
      tags:
        - tasks
info:
  title: Cumuservice
  description: This API describes the operations of cumuservice
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateSensorDto:
      type: object
      properties:
        managedObjectId:
          type: number
        managedObjectName:
          type: string
        valueFragmentType:
          type: string
        valueFragmentDisplayName:
          type: string
        description:
          type: string
        customAttributes:
          type: object
      required:
        - managedObjectId
        - managedObjectName
        - valueFragmentType
    OutputSensorDto:
      type: object
      properties:
        id:
          type: string
        managedObjectId:
          type: number
        managedObjectName:
          type: string
        valueFragmentType:
          type: string
        valueFragmentDisplayName:
          type: string
        description:
          type: string
        customAttributes:
          type: object
      required:
        - id
        - managedObjectId
        - managedObjectName
        - valueFragmentType
        - valueFragmentDisplayName
    PaginatedOutputSensorDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OutputSensorDto'
        pageInfo:
          type: object
      required:
        - data
        - pageInfo
    CreateGroupDto:
      type: object
      properties:
        name:
          type: string
        sensors:
          type: array
          items:
            type: string
        customAttributes:
          type: object
      required:
        - name
        - sensors
    OutputGroupDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sensors:
          type: array
          items:
            $ref: '#/components/schemas/OutputSensorDto'
        customAttributes:
          type: object
      required:
        - id
        - name
        - sensors
    LoginDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponseDto:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    C8yCredentialsInputDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        tenantID:
          type: string
        baseAddress:
          type: string
      required:
        - username
        - password
        - tenantID
        - baseAddress
    CreateUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: array
          items:
            type: string
            enum:
              - User
              - Admin
        c8yCredentials:
          $ref: '#/components/schemas/C8yCredentialsInputDto'
      required:
        - username
        - password
        - c8yCredentials
    C8yCredentialsOutputDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        tenantID:
          type: string
        baseAddress:
          type: string
      required:
        - username
        - password
        - tenantID
        - baseAddress
    UserOutputDto:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        roles:
          type: array
          items:
            type: string
        c8yCredentials:
          $ref: '#/components/schemas/C8yCredentialsOutputDto'
      required:
        - id
        - roles
        - c8yCredentials
    DeleteUserInputDto:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    PartialC8yCredentialsInputDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        tenantID:
          type: string
        baseAddress:
          type: string
    UpdateUserDto:
      type: object
      properties:
        role:
          type: array
          items:
            type: string
            enum:
              - User
              - Admin
        c8yCredentials:
          $ref: '#/components/schemas/PartialC8yCredentialsInputDto'
    OutputFileValueFragmentDto:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      required:
        - type
    OutputFileMetadataDto:
      type: object
      properties:
        sensors:
          type: array
          items:
            type: string
        fromDate:
          type: string
        toDate:
          type: string
        managedObjectId:
          type: string
        managedObjectName:
          type: string
        valueFragments:
          type: array
          items:
            $ref: '#/components/schemas/OutputFileValueFragmentDto'
    OutputFileStorageDto:
      type: object
      properties:
        bucket:
          type: string
        path:
          type: string
        url:
          type: string
      required:
        - bucket
        - path
    OutputFileDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdByTask:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/OutputFileMetadataDto'
        storage:
          $ref: '#/components/schemas/OutputFileStorageDto'
        customAttributes:
          type: object
      required:
        - id
        - name
        - customAttributes
    PaginatedOutputFileDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OutputFileDto'
        pageInfo:
          type: object
      required:
        - data
        - pageInfo
    OutputTaskDto:
      type: object
      properties:
        id:
          type: string
        taskType:
          type: string
        name:
          type: string
        status:
          type: string
        payload:
          type: object
        createdAt:
          type: string
      required:
        - id
        - taskType
        - name
        - status
    PaginatedOutputTaskDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OutputTaskDto'
        pageInfo:
          type: object
      required:
        - data
        - pageInfo
